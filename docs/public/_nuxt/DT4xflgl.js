import{O as T,a6 as m,j as O,a7 as j,a8 as B,a9 as M,z as U,g as F,aa as q,ab as L,u as $,B as z,ac as S,m as V,ad as h,ae as x,r as H,af as K,ag as I,a0 as N}from"./8FcX_UG7.js";const G=t=>t==="defer"||t===!1;function k(...t){var w;const n=typeof t[t.length-1]=="string"?t.pop():void 0;typeof t[0]!="string"&&t.unshift(n);let[s,i,e={}]=t;if(typeof s!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof i!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const a=T(),u=i,p=()=>m.value,C=()=>a.isHydrating?a.payload.data[s]:a.static.data[s];e.server=e.server??!0,e.default=e.default??p,e.getCachedData=e.getCachedData??C,e.lazy=e.lazy??!1,e.immediate=e.immediate??!0,e.deep=e.deep??m.deep,e.dedupe=e.dedupe??"cancel";const y=e.getCachedData(s,a),g=y!=null;if(!a._asyncData[s]||!e.immediate){(w=a.payload._errors)[s]??(w[s]=m.errorValue);const c=e.deep?O:j;a._asyncData[s]={data:c(g?y:e.default()),pending:O(!g),error:B(a.payload._errors,s),status:O("idle"),_default:e.default}}const r={...a._asyncData[s]};delete r._default,r.refresh=r.execute=(c={})=>{if(a._asyncDataPromises[s]){if(G(c.dedupe??e.dedupe))return a._asyncDataPromises[s];a._asyncDataPromises[s].cancelled=!0}if(c._initial||a.isHydrating&&c._initial!==!1){const l=c._initial?y:e.getCachedData(s,a);if(l!=null)return Promise.resolve(l)}r.pending.value=!0,r.status.value="pending";const f=new Promise((l,o)=>{try{l(u(a))}catch(_){o(_)}}).then(async l=>{if(f.cancelled)return a._asyncDataPromises[s];let o=l;e.transform&&(o=await e.transform(l)),e.pick&&(o=Q(o,e.pick)),a.payload.data[s]=o,r.data.value=o,r.error.value=m.errorValue,r.status.value="success"}).catch(l=>{if(f.cancelled)return a._asyncDataPromises[s];r.error.value=L(l),r.data.value=$(e.default()),r.status.value="error"}).finally(()=>{f.cancelled||(r.pending.value=!1,delete a._asyncDataPromises[s])});return a._asyncDataPromises[s]=f,a._asyncDataPromises[s]},r.clear=()=>J(a,s);const v=()=>r.refresh({_initial:!0}),D=e.server!==!1&&a.payload.serverRendered;{const c=z();if(c&&D&&e.immediate&&!c.sp&&(c.sp=[]),c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const o=c._nuxtOnBeforeMountCbs;M(()=>{o.forEach(_=>{_()}),o.splice(0,o.length)}),U(()=>o.splice(0,o.length))}D&&a.isHydrating&&(r.error.value||y!=null)?(r.pending.value=!1,r.status.value=r.error.value?"error":"success"):c&&(a.payload.serverRendered&&a.isHydrating||e.lazy)&&e.immediate?c._nuxtOnBeforeMountCbs.push(v):e.immediate&&v();const f=S();if(e.watch){const o=F(e.watch,()=>r.refresh());f&&q(o)}const l=a.hook("app:data:refresh",async o=>{(!o||o.includes(s))&&await r.refresh()});f&&q(l)}const b=Promise.resolve(a._asyncDataPromises[s]).then(()=>r);return Object.assign(b,r),b}function J(t,n){n in t.payload.data&&(t.payload.data[n]=void 0),n in t.payload._errors&&(t.payload._errors[n]=m.errorValue),t._asyncData[n]&&(t._asyncData[n].data.value=void 0,t._asyncData[n].error.value=m.errorValue,t._asyncData[n].pending.value=!1,t._asyncData[n].status.value="idle"),n in t._asyncDataPromises&&(t._asyncDataPromises[n]&&(t._asyncDataPromises[n].cancelled=!0),t._asyncDataPromises[n]=void 0)}function Q(t,n){const s={};for(const i of n)s[i]=t[i];return s}function W(t,n,s){const[i={},e]=typeof n=="string"?[{},n]:[n,s],a=V(()=>h(t)),u=i.key||x([e,typeof a.value=="string"?a.value:"",...X(i)]);if(!u||typeof u!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+u);if(!t)throw new Error("[nuxt] [useFetch] request is missing.");const p=u===e?"$f"+u:u;if(!i.baseURL&&typeof a.value=="string"&&a.value[0]==="/"&&a.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:C,lazy:y,default:g,transform:r,pick:v,watch:D,immediate:b,getCachedData:w,deep:c,dedupe:f,...l}=i,o=H({...K,...l,cache:typeof i.cache=="boolean"?void 0:i.cache}),_={server:C,lazy:y,default:g,transform:r,pick:v,immediate:b,getCachedData:w,deep:c,dedupe:f,watch:D===!1?[]:[o,a,...D||[]]};let d;return k(p,()=>{var E;(E=d==null?void 0:d.abort)==null||E.call(d,new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),d=typeof AbortController<"u"?new AbortController:{};const R=h(i.timeout);let P;return R&&(P=setTimeout(()=>d.abort(new DOMException("Request aborted due to timeout.","AbortError")),R),d.signal.onabort=()=>clearTimeout(P)),(i.$fetch||globalThis.$fetch)(a.value,{signal:d.signal,...o}).finally(()=>{clearTimeout(P)})},_)}function X(t){var s;const n=[((s=h(t.method))==null?void 0:s.toUpperCase())||"GET",h(t.baseURL)];for(const i of[t.params||t.query]){const e=h(i);if(!e)continue;const a={};for(const[u,p]of Object.entries(e))a[h(u)]=h(p);n.push(a)}return n}const ee=(t,n)=>{const s=N();I("openid");const i={baseURL:s.public.baseURL,onRequest({options:e}){e.headers={...e.headers},e.params={...e.params},e.query={...e.query}},onResponse({response:e}){},onResponseError({response:e}){}};return new Promise((e,a)=>{W(t,Object.assign(i,n),"$m1naE8lEkD").then(u=>{e(u.data.value)}).catch(u=>{a(u)})})};export{ee as u};
